# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'encipher_ui.ui'
#
# Created by: PyQt5 UI code generator 5.14.2
#
# WARNING! All changes made in this file will be lost!

from encipher_QMyGraphicsView import *
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 592)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolTip("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ALL = QtWidgets.QHBoxLayout()
        self.ALL.setObjectName("ALL")
        self.all_Left = QtWidgets.QVBoxLayout()
        self.all_Left.setObjectName("all_Left")
        self.graphicsView = QMyGraphicsView(self.centralwidget)
        self.graphicsView.setEnabled(True)
        self.graphicsView.setMinimumSize(QtCore.QSize(0, 0))
        self.graphicsView.setObjectName("graphicsView")
        self.all_Left.addWidget(self.graphicsView)
        self.chooseThickness = QtWidgets.QHBoxLayout()
        self.chooseThickness.setObjectName("chooseThickness")
        self.label_thickness = QtWidgets.QLabel(self.centralwidget)
        self.label_thickness.setObjectName("label_thickness")
        self.chooseThickness.addWidget(self.label_thickness)
        self.horSli_chooseThickness = QtWidgets.QSlider(self.centralwidget)
        self.horSli_chooseThickness.setOrientation(QtCore.Qt.Horizontal)
        self.horSli_chooseThickness.setObjectName("horSli_chooseThickness")
        self.chooseThickness.addWidget(self.horSli_chooseThickness)
        self.all_Left.addLayout(self.chooseThickness)
        self.encrypt = QtWidgets.QHBoxLayout()
        self.encrypt.setObjectName("encrypt")
        self.button_openM0 = QtWidgets.QPushButton(self.centralwidget)
        self.button_openM0.setObjectName("button_openM0")
        self.encrypt.addWidget(self.button_openM0)
        self.chooseEncryptPart = QtWidgets.QVBoxLayout()
        self.chooseEncryptPart.setObjectName("chooseEncryptPart")
        self.ifchoose = QtWidgets.QHBoxLayout()
        self.ifchoose.setObjectName("ifchoose")
        self.checkBox_ifChoose = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_ifChoose.setEnabled(False)
        self.checkBox_ifChoose.setObjectName("checkBox_ifChoose")
        self.ifchoose.addWidget(self.checkBox_ifChoose)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setEnabled(False)
        self.pushButton.setObjectName("pushButton")
        self.ifchoose.addWidget(self.pushButton)
        self.chooseEncryptPart.addLayout(self.ifchoose)
        self.encrypt.addLayout(self.chooseEncryptPart)
        self.button_encrypt = QtWidgets.QPushButton(self.centralwidget)
        self.button_encrypt.setEnabled(False)
        self.button_encrypt.setObjectName("button_encrypt")
        self.encrypt.addWidget(self.button_encrypt)
        self.all_Left.addLayout(self.encrypt)
        self.decrypt = QtWidgets.QHBoxLayout()
        self.decrypt.setObjectName("decrypt")
        self.button_openC = QtWidgets.QPushButton(self.centralwidget)
        self.button_openC.setObjectName("button_openC")
        self.decrypt.addWidget(self.button_openC)
        self.button_openKey = QtWidgets.QPushButton(self.centralwidget)
        self.button_openKey.setEnabled(False)
        self.button_openKey.setObjectName("button_openKey")
        self.decrypt.addWidget(self.button_openKey)
        self.button_decrypt = QtWidgets.QPushButton(self.centralwidget)
        self.button_decrypt.setEnabled(False)
        self.button_decrypt.setObjectName("button_decrypt")
        self.decrypt.addWidget(self.button_decrypt)
        self.all_Left.addLayout(self.decrypt)
        self.ALL.addLayout(self.all_Left)
        self.picInfo = QtWidgets.QVBoxLayout()
        self.picInfo.setObjectName("picInfo")
        self.label_picName = QtWidgets.QLabel(self.centralwidget)
        self.label_picName.setObjectName("label_picName")
        self.picInfo.addWidget(self.label_picName)
        self.ifOpenPic = QtWidgets.QLabel(self.centralwidget)
        self.ifOpenPic.setObjectName("ifOpenPic")
        self.picInfo.addWidget(self.ifOpenPic)
        self.label_picSize = QtWidgets.QLabel(self.centralwidget)
        self.label_picSize.setObjectName("label_picSize")
        self.picInfo.addWidget(self.label_picSize)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.picInfo.addItem(spacerItem)
        self.label_pos = QtWidgets.QLabel(self.centralwidget)
        self.label_pos.setObjectName("label_pos")
        self.picInfo.addWidget(self.label_pos)
        self.label_nowthickness = QtWidgets.QLabel(self.centralwidget)
        self.label_nowthickness.setObjectName("label_nowthickness")
        self.picInfo.addWidget(self.label_nowthickness)
        self.label_debug = QtWidgets.QLabel(self.centralwidget)
        self.label_debug.setEnabled(True)
        self.label_debug.setObjectName("label_debug")
        self.picInfo.addWidget(self.label_debug)
        self.textBrowser_debug = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_debug.setEnabled(True)
        self.textBrowser_debug.setMinimumSize(QtCore.QSize(150, 70))
        self.textBrowser_debug.setMaximumSize(QtCore.QSize(150, 70))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setBold(False)
        font.setWeight(50)
        self.textBrowser_debug.setFont(font)
        self.textBrowser_debug.setToolTip("")
        self.textBrowser_debug.setAutoFillBackground(False)
        self.textBrowser_debug.setStyleSheet("background-color: rgb(202, 202, 202);")
        self.textBrowser_debug.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser_debug.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_debug.setObjectName("textBrowser_debug")
        self.picInfo.addWidget(self.textBrowser_debug)
        self.ALL.addLayout(self.picInfo)
        self.horizontalLayout.addLayout(self.ALL)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setEnabled(True)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "基于多重hash函数与一次一密的图像加密器"))
        self.label_thickness.setText(_translate("MainWindow", "画笔粗细："))
        self.horSli_chooseThickness.setToolTip(_translate("MainWindow", "调整选择加密部分时的画笔粗细。"))
        self.button_openM0.setToolTip(_translate("MainWindow", "点击打开明文图像。"))
        self.button_openM0.setText(_translate("MainWindow", "打开明文图像"))
        self.checkBox_ifChoose.setToolTip(_translate("MainWindow", "不打勾为全局加密，打勾为局部加密；用鼠标点击图像选择加密部分。"))
        self.checkBox_ifChoose.setText(_translate("MainWindow", "选择局部"))
        self.pushButton.setToolTip(_translate("MainWindow", "重置加密部分。"))
        self.pushButton.setText(_translate("MainWindow", "重置"))
        self.button_encrypt.setToolTip(_translate("MainWindow", "点击进行加密处理，密文图像和.key文件(包括密钥和加密矩阵)将保存在当前目录。"))
        self.button_encrypt.setText(_translate("MainWindow", "加密"))
        self.button_openC.setToolTip(_translate("MainWindow", "点击打开米文图像。"))
        self.button_openC.setText(_translate("MainWindow", "打开密文图像"))
        self.button_openKey.setToolTip(_translate("MainWindow", "点击打开.key文件"))
        self.button_openKey.setText(_translate("MainWindow", "打开密钥文件"))
        self.button_decrypt.setToolTip(_translate("MainWindow", "进行解密处理，明文图像保存在当前目录。"))
        self.button_decrypt.setText(_translate("MainWindow", "解密"))
        self.label_picName.setText(_translate("MainWindow", "图像名称："))
        self.ifOpenPic.setText(_translate("MainWindow", "图片状态："))
        self.label_picSize.setText(_translate("MainWindow", "图像大小："))
        self.label_pos.setText(_translate("MainWindow", "当前坐标："))
        self.label_nowthickness.setText(_translate("MainWindow", "当前画笔粗细：0"))
        self.label_debug.setText(_translate("MainWindow", "Debug："))
